// Given array `arr` and little-endian word `idx`, extracts value `arr[idx]`.
Array.get<A:Type, depth:Nat>(idx: Word(depth), arr: Array(A,depth)): A
  def P = (depth) Array(A,depth) -> A
  def nil = Array.extract_tip<A>
  def w0 = <idx.size> (rec) (arr)
    get arr_l _ = Array.extract_tie<A, idx.size>(arr)
    rec(arr_l)
  def w1 = <idx.size> (rec) (arr)
    get _ arr_r = Array.extract_tie<A, idx.size>(arr)
    rec(arr_r)
  Word.foldl<P, depth>(nil, w0, w1, idx, arr)
