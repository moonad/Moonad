// A theorem that a list made with List.cons is not the empty list
List.cons_isnt_empty<A: Type>(
  x:A,
  xs: List(A)
): List.not_empty<A>(List.cons<A>(x,xs))
  def y = List.cons<A>(x,xs)
  case y:
  with e : Equal(List(A),y,y.self) = Equal.to<List(A),y>;
  | Empty.absurd<>(List.cons_isnt_nil<A>(x,xs,e));
  | Unit.new;
