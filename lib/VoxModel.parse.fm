VoxModel.parse(voxdata: String): VoxModel
  let voxsize = U32.div(U32.length(voxdata), 12u)
  let voxmodel = VoxModel.alloc_size(voxsize);
  U32.for<VoxModel>(voxmodel, 0u, voxsize)
  | (i, voxmodel)
    let x = VoxModel.parse_byte(U32.add(U32.mul(i, 6u), 0u), voxdata)
    let y = VoxModel.parse_byte(U32.add(U32.mul(i, 6u), 1u), voxdata)
    let z = VoxModel.parse_byte(U32.add(U32.mul(i, 6u), 2u), voxdata)
    let r = VoxModel.parse_byte(U32.add(U32.mul(i, 6u), 3u), voxdata)
    let g = VoxModel.parse_byte(U32.add(U32.mul(i, 6u), 4u), voxdata)
    let b = VoxModel.parse_byte(U32.add(U32.mul(i, 6u), 5u), voxdata)
    let voxmodel = VoxModel.set_col(i, Col32.new(r,g,b,255u), voxmodel)
    let voxmodel = VoxModel.set_pos(i, Pos32.new(x,y,z), voxmodel)
    voxmodel;
