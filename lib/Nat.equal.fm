Nat.equal(a: Nat, b: Nat): Either(a == b, Not(a == b))
  case a:
  | case b:
    | Either.left<,>(Equal.to<Nat,0>);
    | Either.right<,>(Nat.zero_not_succ(b.pred));
    : Either(0 == b.self, Not(0 == b.self));;
  | case b:
    | Either.right<,>(Nat.succ_not_zero(a.pred));
    | case Nat.equal(a.pred, b.pred) as rec:
      | Either.left<,>(Equal.apply<Nat, Nat, a.pred, b.pred, Nat.succ>(rec.value));
      | Either.right<,>((eq) rec.value(Nat.succ_inj(a.pred, b.pred, eq)));
      : Either(Nat.succ(a.pred) == Nat.succ(b.pred), Not(Nat.succ(a.pred) == Nat.succ(b.pred)));;
    : Either(Nat.succ(a.pred) == b.self, Not(Nat.succ(a.pred) == b.self));;
  : Either(a.self == b, Not(a.self == b));
