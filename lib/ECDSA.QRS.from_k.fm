ECDSA.QRS.from_k(k: Nat, msg: Nat, priv: Nat): ECDSA.Error(ECDSA.QRS)
  case ECDSA.PrivateKey.is_valid(k):
  | let max = ECDSA.CURVE.n
    let q = ECDSA.Point.base.mul(k)
    get q.x q.y = q
    let r = Nat.mod(q.x, max)
    let s = Nat.mod(Nat.mul(ECDSA.invert(k, max), (Nat.add(msg, Nat.mul(r, priv)))), max)
    case Bool.or(Nat.eql(r, 0), Nat.eql(s, 0)):
    | ECDSA.Error.err<>(ECDSA.ErrorTypes.invalid_k);
    | ECDSA.Error.ok<>(ECDSA.QRS.new(q, r, s));;
  | ECDSA.Error.err<>(ECDSA.ErrorTypes.invalid_k);
