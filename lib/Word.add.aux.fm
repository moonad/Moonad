Word.add.aux<size: Nat>(a: Word(size), b: Word(size), c: Bool): Word(size)
  case a:
  with b: Word(a.size) = b;
  | Word.nil;
  | case b:
    with a.pred: Word(Nat.pred(b.size)) = a.pred;
    | Word.nil;
    | case c:
      | Word.1<b.size>(Word.add.aux<b.size>(a.pred, b.pred, Bool.false)); // a=0 b=0 c=0
      | Word.0<b.size>(Word.add.aux<b.size>(a.pred, b.pred, Bool.false));
      | Unit.new;; // a=0 b=0 c=1
    | case c:
      | Word.0<b.size>(Word.add.aux<b.size>(a.pred, b.pred, Bool.true)); // a=0 b=1 c=0
      | Word.1<b.size>(Word.add.aux<b.size>(a.pred, b.pred, Bool.false)); // a=0 b=1 c=1
      | Unit.new;;
    : Word(b.size);;
  | case b:
    with a.pred: Word(Nat.pred(b.size)) = a.pred;
    | Word.nil;
    | case c:
      | Word.0<b.size>(Word.add.aux<b.size>(a.pred, b.pred, Bool.true)); // a=1 b=0 c=0
      | Word.1<b.size>(Word.add.aux<b.size>(a.pred, b.pred, Bool.false));
      | Unit.new;; // a=1 b=0 c=1
    | case c:
      | Word.1<b.size>(Word.add.aux<b.size>(a.pred, b.pred, Bool.true));   // a=1 b=1 c=0
      | Word.0<b.size>(Word.add.aux<b.size>(a.pred, b.pred, Bool.true));   // a=1 b=1 c=1
      | Unit.new;;
    : Word(b.size);;
  : Word(a.size);
