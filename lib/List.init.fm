// Get the all elements of a nonempty list except the last one
List.init<A: Type>(xs: List(A), not_empty: List.not_empty<A>(xs)) : List(A)
  case xs:
  with ne : List.not_empty<A>(xs.self) = not_empty;
  | Empty.absurd<>(ne);
  | case xs.tail:
    with e : Equal(_, xs.tail.self,xs.tail) = Equal.to<List(A),xs.tail>;
    | List.nil<>;
    | def cne = List.cons_isnt_empty<A>(xs.tail.head,xs.tail.tail)
      def xne = Equal.rewrite<_,_,_,(x) List.not_empty<A>(x)>(e,cne)
      List.cons<>(xs.head,List.init<>(xs.tail,xne));;
